---
title: Enabling Peer Replication
owner: Spring Cloud Services
---

<strong><%= modified_date %></strong>

You can configure a Service Registry service instance to replicate service registrations with a Service Registry service instance in another [Pivotal Cloud Foundry](https://network.pivotal.io/products/pivotal-cf) (PCF) deployment (e.g. a PCF deployment in another datacenter) or in another organization or space within the same PCF deployment. To do so, you must specify the peer Service Registry instance's URI using the `peers` JSON array, which contains an object for each Service Registry peer. You can find a Service Registry service instance's URI on its dashboard (see the [Using the Dashboard](/spring-cloud-services/service-registry/using-the-dashboard.html) topic).

A Service Registry peer can be expressed as shown in the following JSON:

```
{
  "peers": [
    { "uri": "https://eureka-e280160b-d3e3-41ad-93a6-479f9b298ca6.wise2.com" }
  ]
}
```

Peer URIs must use the HTTPS URI scheme (as `https://`) and must follow the format `https://eureka-GUID.APPLICATION_DOMAIN.TLD`, where `GUID` is the GUID assigned to a Service Registry service instance and `APPLICATION_DOMAIN.TLD` is the application domain of the PCF deployment where that Service Registry service instance is running.

Spring Cloud Services will by default validate the SSL certificate on each peer. You can disable this validation for a given peer by setting the `skipSslValidation` parameter to `true` for that peer, as shown in the following JSON:

```
{
  "peers": [
    { "uri": "https://eureka-41562ac7-b6a6-4dc2-8a34-c1f94e82c83d.wise2.com",
      "skipSslValidation": true }
  ]
}
```

<p class='note'><strong>Note</strong>: If you disable certificate validation for a Service Registry service instance's peer, you may need to set the <code>TRUST_CERTS</code> environment variable on applications bound to that Service Registry service instance or to the peer. See the <a href="/spring-cloud-services/service-registry/writing-client-applications.html#peers-with-self-signed-certificates">Service Registry Peers with Self-Signed Certificates</a> section of the <a href="/spring-cloud-services/service-registry/writing-client-applications.html">Writing Client Applications</a> topic for more information.</p>

The parameters used to configure a peer for the Service Registry are listed below.

| Parameter                                  | Function                                                                                                                                              |
|--------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------|
| <code>peers[i].uri</code>                  | The URI of the Service Registry peer                                                                                                                  |
| <code>peers[i].skipSslValidation</code>    | Whether to skip SSL validation for the Service Registry peer. Valid values are <code>true</code> and <code>false</code> (default: <code>false</code>) |

To create or update a Service Registry service instance to replicate a registry with a peer service instance, allowing for validation of the peer's SSL certificate, run one of the following commands:

<pre class="terminal">
$ cf create-service p-service-registry standard service-registry -c '{ "peers": [ {"uri": "https://eureka-e280160b-d3e3-41ad-93a6-479f9b298ca6.wise2.com"} ] }'

$ cf update-service service-registry -c '{ "peers": [ {"uri": "https://eureka-e280160b-d3e3-41ad-93a6-479f9b298ca6.wise2.com"} ] }'
</pre>

To create or update a Service Registry service instance to replicate a registry with a peer service instance, skipping validation of the peer's SSL certificate, run one of the following commands:

<pre class="terminal">
$ cf create-service p-service-registry standard service-registry -c '{ "peers": [ {"uri": "https://eureka-e280160b-d3e3-41ad-93a6-479f9b298ca6.wise2.com", "skipSslValidation": true} ] }'

$ cf update-service service-registry -c '{ "peers": [ {"uri": "https://eureka-e280160b-d3e3-41ad-93a6-479f9b298ca6.wise2.com", "skipSslValidation": true} ] }'
</pre>

<p class='note'><strong>Important</strong>: If you provide a peer URI which does not correspond to an available Service Registry service instance (e.g. if there is a typo in the URI) or do not disable SSL certificate validation for a peer whose certificate cannot be verified, the <code>cf create-service</code> or <code>cf update-service</code> command may run successfully and the service instance status may be set to <code>create succeeded</code> or <code>update succeeded</code>, but the peer will not be used by the Service Registry service instance. In such a case, an error will appear on the Service Registry dashboard. See the <a href="#error-conditions">Error Conditions</a> section for more information.</p>

<a id="error-conditions"></a>
## Error Conditions

The Service Registry dashboard may show error or warning messages depending on the configuration and status of the service instance's peer configuration. See the below sections for more information.

<a id="peer-not-found"></a>
### Peer Service Instance Not Found (404)

If you have configured a Service Registry service instance with a peer service instance URI that does not correspond to an available Service Registry service instance, you may see the following error message on the dashboard:

<%= image_tag("service-registry/dashboard-peer-not-found.png") %>

Double-check the URI of the peer listed in the error message. This can occur (e.g.) when there is a mistyped URI or when the service instance corresponding to the URI has been deleted.

<a id="peer-cert-not-verified"></a>
### Peer Service Instance SSL Certificate Not Verified

If you have configured a Service Registry service instance with a peer service instance that uses a self-signed SSL certificate and have not disabled certificate validation for the peer service instance, you may see the following error message on the dashboard:

<%= image_tag("service-registry/dashboard-cert-not-verified.png") %>

To enable the Service Registry service instance to replicate a registry with this peer service instance without a secure connection, you can update the configuration for this Service Registry service instance to disable SSL certificate validation for the peer. See the above information on configuring peer replication and the `skipSslValidation` configuration parameter.

<a id="peer-node-count-difference"></a>
### Peer Service Instance Node Count Difference

If you have configured a Service Registry service instance with a peer service instance and the two service instances have differing High Availability (HA) node counts, you may see the following error message on the dashboard:

<%= image_tag("service-registry/dashboard-different-node-counts.png") %>

You can update one of the service instances to add or remove nodes so that the two service instances have consistent node counts. See the [Configuration Parameters](/spring-cloud-services/service-registry/updating-an-instance.html#configuration-parameters) section of the [Updating an Instance](/spring-cloud-services/service-registry/updating-an-instance.html) topic for more information.

<a id="peer-list-difference"></a>
### Peer Service Instance Peer List Difference

If you have configured a Service Registry service instance with a peer service instance and the two service instances have differing lists of peer service instances, you may see the following message on the dashboard:

<%= image_tag("service-registry/dashboard-different-peer-list.png") %>

Update the configuration for this Service Registry service instance or for the peer instance to give them consistent peer lists.

<a id="peer-version-difference"></a>
### Peer Service Instance Version Difference

If you have configured a Service Registry service instance with a peer service instance that is at a different version (e.g. that has not been upgraded after an upgrade of the Spring Cloud Services product), you may see the following message on the dashboard:

<%= image_tag("service-registry/dashboard-version-difference.png") %>

You can upgrade the older of the service instances so that the peers are at consistent versions. See the [Service Instance Upgrades](/spring-cloud-services/service-instance-upgrades.html) topic for more information.
