---
title: Spring Cloud Connectors
owner: Spring Cloud Services
---

<strong><%= modified_date %></strong>

To connect client applications to the Service Registry, Spring Cloud Services uses [Spring Cloud Connectors](http://cloud.spring.io/spring-cloud-connectors/spring-cloud-connectors.html), including the [Spring Cloud Cloud Foundry Connector](http://cloud.spring.io/spring-cloud-connectors/spring-cloud-cloud-foundry-connector.html), which discovers services bound to applications running in Cloud Foundry.

## <a id="service-detection"></a>Service Detection

The connector inspects Cloud Foundry's `VCAP_SERVICES` environment variable, which stores connection and identification information for service instances that are bound to Cloud Foundry applications, to detect available services. Below is an example of a `VCAP_SERVICES` entry for the Spring Cloud Services Service Registry.

```json
{
 "VCAP_SERVICES": {
  "p-service-registry": [
   {
    "credentials": {
     "access_token_uri": "https://p-spring-cloud-services.uaa.cf.wise.com/oauth/token",
     "client_id": "p-service-registry-57bdc399-5b2e-4131-b941-d0a4275c2da4",
     "client_secret": "GAmFDRU4KGnS",
     "uri": "https://eureka-32fb7386-2d57-4054-91b4-9fd4dcbac221.wise.com"
    },
    "label": "p-service-registry",
    "name": "service-registry",
    "plan": "standard",
    "tags": [
     "eureka",
     "discovery",
     "registry",
     "spring-cloud"
    ]
   }
  ]
```

For each service in the `VCAP_SERVICES` variable, the connector considers the following fields:

* `tags`: Attributes or names of backing technologies behind the service.
* `label`: The service offering's name (not to be confused with a service _instance's_ name).
* `credentials.uri`: A URI pertaining to the service instance.
* `credentials.uris`: URIs pertaining to the service instance.

### <a id="service-registry-detection-criteria"></a>Service Registry Detection Criteria

To establish availability of the Service Registry, the Spring Cloud Cloud Foundry Connector compares `VCAP_SERVICES` service entries against the following criteria:

* `tags` including `eureka`

## <a id="application-configuration"></a>Application Configuration

In a Spring Boot application which is bound to a Service Registry service instance, the connector automatically configures a Spring Cloud Netflix Eureka client configuration bean. The client configuration includes the discovery zone, which is configured using the URL from the service binding; this is equivalent to setting the ```eureka.client.serviceUrl.defaultZone``` property.

### <a id="eureka-virtual-hostname-configuration"></a>Eureka Virtual Hostname Configuration

Each Netflix Eureka client application has an insecure virtual hostname, set on the application using the `eureka.instance.virtualHostName` property, and a secure virtual hostname, set on the application using the `eureka.instance.secureVirtualHostname` property. If either of these properties is not set, Spring Cloud Netflix Eureka sets the corresponding virtual hostname to the value of the `spring.application.name` property on the client application.

The Spring Cloud Services connector for Service Registry supplies missing hostname values in the same way. However, if a virtual hostname is not explicitly provided and the connector must derive a hostname from the value of the `spring.application.name` property, the connector sanitizes that value by using a - character to replace any character which is invalid in a hostname.

<p class='note'><strong>Important</strong>: If you provide a value for either of the <code>eureka.instance.virtualHostName</code> or <code>eureka.instance.secureVirtualHostname</code> properties, it will not be sanitized, and you must ensure that the value is a valid hostname. The connector sanitizes only virtual hostnames which are derived from the <code>spring.application.name</code> property.</p>

Examples of values provided for the `eureka.instance` virtual hostname properties, values provided for the `spring.application.name` property, and the virtual hostnames resulting from combinations of these values or from providing a given value for `spring.application.name` but none for a `eureka.instance` property are listed below.

| <code>eureka.instance</code> property | <code>spring.application.name</code> | Resultant virtual hostname |
|---------------------------------------|--------------------------------------|----------------------------|
| vhn                                   | san                                  | vhn                        |
| v_hn                                  | san                                  | v_hn                       |
| <em>(not provided)</em>               | san                                  | san                        |
| <em>(not provided)</em>               | s_an                                 | s-an                       |
| x_y                                   | x_y                                  | x_y                        |

## <a id="see-also"></a>See Also

For more information about Spring Cloud Connectors, see the following:

* [Spring Cloud Cloud Foundry Connector documentation](http://cloud.spring.io/spring-cloud-connectors/spring-cloud-cloud-foundry-connector.html)
* [Spring Cloud Spring Service Connector documentation](http://cloud.spring.io/spring-cloud-connectors/spring-cloud-spring-service-connector.html)
* [Spring Cloud Connectors documentation](http://cloud.spring.io/spring-cloud-connectors/spring-cloud-connectors.html)
* [Spring Cloud Connectors for Spring Cloud Services on Pivotal Cloud Foundry](https://github.com/pivotal-cf/spring-cloud-services-connector)
