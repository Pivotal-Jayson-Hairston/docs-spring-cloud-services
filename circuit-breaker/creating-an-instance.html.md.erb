---
title: Creating an Instance
owner: Spring Cloud Services
---

<strong><%= modified_date %></strong>

You can create a Circuit Breaker Dashboard service instance using either the Cloud Foundry Command Line Interface tool (cf CLI) or the PWS Apps Manager.

## <a id="using-cf-cli"></a>Using the cf CLI

Begin by targeting the correct org and space.

<pre class="terminal">
$ cf target -o myorg -s development

API endpoint:   https://api.run.pivotal.io (API version: 2.61.0)
User:           username@example.com
Org:            myorg
Space:          development
</pre>

If desired, view plan details for the Circuit Breaker Dashboard product using
`cf marketplace -s`.

<pre class="terminal">
$ cf marketplace
Getting services from marketplace in org myorg / space development as username@example.com...
OK

service                       plans          description
p-circuit-breaker-dashboard   standard       Circuit Breaker Dashboard for Spring Cloud Applications
p-config-server               standard       Config Server for Spring Cloud Applications
p-service-registry            standard       Service Registry for Spring Cloud Applications

TIP:  Use 'cf marketplace -s SERVICE' to view descriptions of individual plans of a given service.

$ cf marketplace -s p-circuit-breaker-dashboard
Getting service plan information for service p-circuit-breaker-dashboard as username@example.com...
OK

service plan   description     free or paid
standard       Standard Plan   free
</pre>

Run `cf create-service`, specifying the service, plan name, and instance name.

<pre class="terminal">
$ cf create-service p-circuit-breaker-dashboard standard circuit-breaker-dashboard
Creating service instance circuit-breaker-dashboard in org myorg / space development as username@example.com...
OK

Create in progress. Use 'cf services' or 'cf service circuit-breaker-dashboard' to check operation status.
</pre>

As the command output suggests, you can use the `cf services` or `cf service` commands to check the status of the service instance. When the service instance is ready, the `cf service` command will give a status of `create succeeded`:

<pre class="terminal">
$ cf service circuit-breaker-dashboard

Service instance: circuit-breaker-dashboard
Service: p-circuit-breaker-dashboard
Bound apps:
Tags:
Plan: standard
Description: Circuit Breaker Dashboard for Spring Cloud&reg; Applications
Documentation url: http://docs.pivotal.io/spring-cloud-services/
Dashboard: https://spring-cloud-service-broker.cfapps.io/dashboard/p-circuit-breaker-dashboard/7622a02c-99e5-4e99-aab5-b88ada858560

Last Operation
Status: create succeeded
Message: 
Started: 2016-09-09T14:25:07Z
Updated: 
</pre>

## Using Apps Manager

Log into Apps Manager as a Space Developer. In the Marketplace, select **Circuit Breaker**.

   <%= image_tag("circuit-breaker/marketplace.png") %>

Select the desired plan for the new service instance.

   <%= image_tag("circuit-breaker/select_plan.png") %>

Provide a name for the service instance (for example, "circuit-breaker-dashboard"). Click the **Add** button.

   <%= image_tag("circuit-breaker/instance_name.png") %>

In the **Services** list, click the listing for the new service instance.

   <%= image_tag("circuit-breaker/service_successfully_added.png") %>

Click the **Manage** link.

   <%= image_tag("circuit-breaker/manage_link.png") %>

It may take a few minutes to provision the service instance; while it is being provisioned, you will see a "The service instance is initializing" message. Once the instance is ready, its dashboard will load automatically.

The Circuit Breaker Dashboard instance is now ready to be used. For an example of using a circuit breaker in an application, see the <a href="/spring-cloud-services/circuit-breaker/writing-client-applications.html">Writing Client Applications</a> topic.
