---
title: Troubleshooting Spring Cloud&reg; Services for Pivotal Cloud Foundry
owner: Spring Cloud Services
---

<style>
    .note.warning {
        background-color: #fdd;
        border-color: #fbb
    }

    .note.warning:before {
        color: #f99;
     }
</style>

See below for information about problems related to your [Pivotal Cloud Foundry](https://network.pivotal.io/products/pivotal-cf) (PCF) platform configuration or Spring Cloud Services or other product installation.

## <a id="service-registry-authentication-failed"></a>Service Registry: "Authentication Failed: Could not obtain access token"

If you encounter a message similar to the following when attempting to access a Service Registry dashboard:

<%= image_tag("./images/sr-authentication-failed.png") %>

with the following text:

> **401 (Unauthorized)**

> Authentication Failed: Could not obtain access token

If your PCF deployment is using a self-signed certificate, ensure that it includes all of the domains listed in the [Security Requirements](/spring-cloud-services/prerequisites.html#security-requirements) section of the [Prerequisites](/spring-cloud-services/prerequisites.html) topic. (See the [Providing a Certificate for your SSL Termination Point](/pivotalcf/1-8/opsguide/security_config.html) topic in the [Pivotal Cloud Foundry documentation](/pivotalcf/) for more information about configuring the certificate.) If you update the certificate, you will need to either restart the service instance's backing application(s) or recreate the service instance, or you may continue to see this message and be unable to access the Service Registry dashboard.

## <a id="no-san-matching"></a>"No subject alternative DNS name matching p-spring-cloud-services.uaa.example.com found"

If you encounter an exception message similar to the following:

```
org.springframework.web.client.ResourceAccessException: I/O error on POST request for
"https://p-spring-cloud-services.uaa.example.com/oauth/token":
java.security.cert.CertificateException: No subject alternative DNS name matching
p-spring-cloud-services.uaa.example.com found.; nested exception is
javax.net.ssl.SSLHandshakeException: java.security.cert.CertificateException: No
subject alternative DNS name matching p-spring-cloud-services.uaa.example.com found.
```

Ensure that your PCF installation meets the requirements described in the [Security Requirements](/spring-cloud-services/prerequisites.html#security-requirements) section of the [Prerequisites](/spring-cloud-services/prerequisites.html) topic. Be sure that your Elastic Runtime SSL certificate includes all wildcards listed in that section and has a separate wildcard for each subdomain.

## <a id="protocol-version"></a>"javax.net.ssl.SSLException: Received fatal alert: protocol_version"

The Cloud Foundry Command Line Interface tool (cf CLI) `create-service` command may return an error similar to the following:

```
Server error, status code: 502, error code: 10001, message: Service broker error:
javax.net.ssl.SSLException: Received fatal alert: protocol_version
```

Spring Cloud Services requires the [RabbitMQ for PCF](https://network.pivotal.io/products/pivotal-rabbitmq-service) product. If you have provided SSL certificates and keys to RabbitMQ for PCF, you must also enable its TLS 1.0 support in order to use it with Spring Cloud Services. See the note at the end of the [Platform and Product Requirements](/spring-cloud-services/prerequisites.html#platform-and-product-requirements) section of the [Prerequisites](/spring-cloud-services/prerequisites.html) topic.

## <a id="rabbitmq-authentication-failure-exception"></a>"com.rabbitmq.client.AuthenticationFailureException: ACCESS_REFUSED - Login was refused using authentication mechanism PLAIN"

If you encounter the following exception message in Spring Cloud Services broker logs:

```
org.springframework.amqp.AmqpAuthenticationException:
com.rabbitmq.client.AuthenticationFailureException: ACCESS_REFUSED - Login was
refused using authentication mechanism PLAIN. For details see the broker
logfile.
```

The credentials used by the Spring Cloud Services broker to access its RabbitMQ for PCF service instance may be invalid. This can happen after restoring a backup of Pivotal Cloud Foundry&reg; Elastic Runtime, as a restored RabbitMQ for PCF service instance may not accept the restored credentials used by the Spring Cloud Services broker. You can update the Spring Cloud Services broker's credentials by unbinding the RabbitMQ service instance from the broker applications (the `spring-cloud-broker` and `spring-cloud-broker-worker` applications) and then rebinding.

To unbind the RabbitMQ service instance from the Spring Cloud Services broker applications and rebind it, run the following cf CLI commands:

<pre class="terminal">
$ cf target -o system -s p-spring-cloud-services
$ cf unbind-service spring-cloud-broker spring-cloud-broker-rmq
$ cf unbind-service spring-cloud-broker-worker spring-cloud-broker-rmq
$ cf bind-service spring-cloud-broker spring-cloud-broker-rmq
$ cf restage spring-cloud-broker
$ cf bind-service spring-cloud-broker-worker spring-cloud-broker-rmq
$ cf restage spring-cloud-broker-worker
</pre>

If the PCF environment is newly restored and the RabbitMQ service instance's queues are empty, you may also unbind the RabbitMQ service instance from the broker applications, delete it, create a new instance, and then bind that instance to the Spring Cloud Services broker applications.

<p class="note warning"><strong>WARNING: </strong> Deleting and replacing the RabbitMQ service instance will destroy the original instance's virtual host and any data in the instance's queues. If the RabbitMQ service instance contains messages and is on a production system, unbind and rebind it instead.</p>

To delete and replace the RabbitMQ service instance used by the Spring Cloud Services broker applications, run the following cf CLI commands:

<pre class="terminal">
$ cf target -o system -s p-spring-cloud-services
$ cf unbind-service spring-cloud-broker spring-cloud-broker-rmq
$ cf unbind-service spring-cloud-broker-worker spring-cloud-broker-rmq
$ cf delete-service -f spring-cloud-broker-rmq
$ cf create-service p-rabbitmq standard spring-cloud-broker-rmq
$ cf bind-service spring-cloud-broker spring-cloud-broker-rmq
$ cf restage spring-cloud-broker
$ cf bind-service spring-cloud-broker-worker spring-cloud-broker-rmq
$ cf restage spring-cloud-broker-worker
</pre>
